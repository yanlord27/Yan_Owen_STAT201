if (var_num%%2==2){
var_even<-TRUE
}else{
var_even<-FALSE}
var_num<-as.numeric(var_string)
if (var_num%%2==2){
var_even<-TRUE
}else{
var_even<-FALSE}
if (var_num>0){
var_pos<-TRUE
}else{
var_pos<-FALSE}
print(var_num)
print(var_even)
print(var_pos)
print(var_even && var_pos)
print(!(var_even && var_pos))
print((var_even && !var_pos) || (!var_even && var_pos))
print((var_even && !var_pos) || (!var_even && var_pos))
print((var_even && !var_pos) || (!var_even && var_pos))
var_seconds<-1238
num_min<-var_seconds%/%60
var_seconds<-1238
num_min<-var_seconds%/%60
num_sec<-var_seconds%%60
if (num_min==1){
if (num_sec==1){
cat(var_seconds, "second is", num_min, "minute and",num_sec, "second.")
}else{
cat(var_seconds, "second is", num_min, "minute and",num_sec, "seconds.")
}
}else{
if (num_sec==1){
cat(var_seconds, "second is", num_min, "minutes and",num_sec, "second.")
}else{
cat(var_seconds, "second is", num_min, "minutes and",num_sec, "seconds.")
}
}
var_seconds<-1238
num_min<-var_seconds%/%60
num_sec<-var_seconds%%60
if (var_seconds==1){
cat(var_seconds, "second is", num_min, "minutes and",num_sec, "second.")
}
if (num_min==1){
if (num_sec==1){
cat(var_seconds, "seconds is", num_min, "minute and",num_sec, "second.")
}else{
cat(var_seconds, "seconds is", num_min, "minute and",num_sec, "seconds.")
}
}else{
if (num_sec==1){
cat(var_seconds, "seconds is", num_min, "minutes and",num_sec, "second.")
}else{
cat(var_seconds, "seconds is", num_min, "minutes and",num_sec, "seconds.")
}
}
num1 <- 10
num2 <- 28
num3 <- 4
if (num2>=num1 && num2>=num3){
print(num2)
}elif (num3>=num1 && num3>=num2){
if (num2>=num1 && num2>=num3){
print(num2)
}else if (num3>=num1 && num3>=num2){
print(num3)
}else{
print(num1)
}
if (num1 >= num2){
if (num1 >= num3){
print(num1)
}else{
}print(num3)
if (num1 >= num2){
if (num1 >= num3){
print(num1)
}else{
print(num3)
}else{
if (num1 >= num2){
if (num1 >= num3){
print(num1)
}else{
print(num3)
}}else{
if (num2 >= num3){
print(num2)
}else{
print(num3)
}
}
if (num1 >= num2){
if (num1 >= num3){
print(num1)
}else{
print(num3)
}}else{
if (num2 >= num3){
print(num2)
}else{
print(num3)
}
}
if (num1 >= num2){
if (num1 >= num3){
print(num1)
}else{
print(num3)
}}
else{
if (num1 >= num2){
if (num1 >= num3){
print(num1)
}else{
print(num3)
}}else{
if (num2 >= num3){
print(num2)
}else{
print(num3)
}
}
if (num1 >= num2){
if (num1 >= num3){
print(num1)
}else{
print(num3)
}
}else{
if (num2 >= num3){
print(num2)
}else{
print(num3)
}
}
if (num1 >= num2){
if (num1 >= num3){
print(num1)
}else{
print(num3)
}
}else{
if (num2 >= num3){
print(num2)
}else{
print(num3)
}
}
fact_num<-10
final_fact<-1
while (fact_num>=1){
final_fact*=fact_num
fact_num<-10
final_fact<-1
while (fact_num>=1){
final_fact=final_fact*fact_num
fact_num<-fact_num-1
}
fact_num<-10
final_fact<-1
while (fact_num>=1){
final_fact=final_fact*fact_num
fact_num<-fact_num-1
}
cat(final_fact)
num_val<-24
for(i in 1:num_val){
if (num_val%%i==0){
cat(i)
}
}
num_val<-24
for(i in 1:num_val){
if (num_val%%i==0){
cat(i,"/n")
}
}
num_val<-24
for(i in 1:num_val){
if (num_val%%i==0){
cat(i,",")
}
}
num_val<-24
for(i in 1:num_val){
if (num_val%%i==0){
cat(i,", ",sep="")
}
}
num_val<-24
for(i in 1:num_val){
if (num_val==i){
cat(i,".")
break
}
if (num_val%%i==0){
cat(i,", ",sep="")
}
}
num_val<-24
for(i in 1:num_val){
if (num_val==i){
cat(i,".",sep="")
break
}
if (num_val%%i==0){
cat(i,", ",sep="")
}
}
number<-89
is_prime=FALSE
for (i in 2:number-1){
if (number%%i!=0){
next
}else{
is_prime=TRUE
}
}
number<-89
is_prime=FALSE
for (i in 2:number-1){
if (number%%i!=0){
next
}else{
is_prime=TRUE
}
}
if (is_prime){
cat(number, "is a prime number.")
}else{
cat(number, "is not a prime number.")
}
number<-88
is_prime=FALSE
for (i in 2:number-1){
if (number%%i!=0){
next
}else{
is_prime=TRUE
}
}
if (is_prime){
cat(number, "is a prime number.")
}else{
cat(number, "is not a prime number.")
}
number<-88
is_prime=FALSE
for (i in 2:number-1){
if (number%%i==0){
is_prime=TRUE
}else{
}
}
if (is_prime){
cat(number, "is a prime number.")
}else{
cat(number, "is not a prime number.")
}
number<-88
is_prime=FALSE
for (i in 2:number-1){
if (number%%i==0){
next
}else{
is_prime=TRUE
}
}
if (is_prime){
cat(number, "is a prime number.")
}else{
cat(number, "is not a prime number.")
}
number<-88
is_prime=TRUE
for (i in 2:number-1){
if (number%%i==0){
next
}else{
is_prime=FALSE
}
}
if (is_prime){
cat(number, "is a prime number.")
}else{
cat(number, "is not a prime number.")
}
number<-89
is_prime=TRUE
for (i in 2:number-1){
if (number%%i==0){
next
}else{
is_prime=FALSE
}
}
if (is_prime){
cat(number, "is a prime number.")
}else{
cat(number, "is not a prime number.")
}
number <- 89
is_prime <- TRUE
for (i in 2:(number-1)) {
if (number %% i == 0) {
is_prime <- FALSE
break
}
}
if (is_prime) {
cat(number, "is a prime number.\n")
} else {
cat(number, "is not a prime number.\n")
}
}
number <- 89
is_prime <- TRUE
for (i in 2:(number-1)) {
if (number %% i == 0) {
is_prime <- FALSE
break
}
}
if (is_prime) {
cat(number, "is a prime number.\n")
} else {
cat(number, "is not a prime number.\n")
}
number <- 88
is_prime <- TRUE
for (i in 2:(number-1)) {
if (number %% i == 0) {
is_prime <- FALSE
break
}
}
if (is_prime) {
cat(number, "is a prime number.\n")
} else {
cat(number, "is not a prime number.\n")
}
number <- 2
is_prime <- TRUE
for (i in 2:(number-1)) {
if (number %% i == 0) {
is_prime <- FALSE
break
}
}
if (is_prime) {
cat(number, "is a prime number.\n")
} else {
cat(number, "is not a prime number.\n")
}
number <- 1
is_prime <- TRUE
for (i in 2:(number-1)) {
if (number %% i == 0) {
is_prime <- FALSE
break
}
}
if (is_prime) {
cat(number, "is a prime number.\n")
} else {
cat(number, "is not a prime number.\n")
}
number <- 0
is_prime <- TRUE
for (i in 2:(number-1)) {
if (number %% i == 0) {
is_prime <- FALSE
break
}
}
if (is_prime) {
cat(number, "is a prime number.\n")
} else {
cat(number, "is not a prime number.\n")
}
number <- -6
is_prime <- TRUE
for (i in 2:(number-1)) {
if (number %% i == 0) {
is_prime <- FALSE
break
}
}
if (is_prime) {
cat(number, "is a prime number.\n")
} else {
cat(number, "is not a prime number.\n")
}
number <- 89
is_prime <- TRUE
for (i in 2:(number-1)) {
if (number %% i == 0) {
is_prime <- FALSE
break
}
}
if (is_prime) {
cat(number, "is a prime number.\n")
} else {
cat(number, "is not a prime number.\n")
}
num_big<-4000
small_int<-1
while(TRUE){
if(small_int^2>num_big){
break
}
small_int<-small_int+1
}
cat(small_int,"squared is", small_int^2,"and is the first number whose square exceeds", num_big)
var_num<-as.numeric(var_string)
if (var_num%%2==0){
var_even<-TRUE
}else{
var_even<-FALSE}
if (var_num>0){
var_pos<-TRUE
}else{
var_pos<-FALSE}
print(var_num)
print(var_even)
print(var_pos)
var_num<-as.numeric(var_string)
var_even<-(var_num %% 2 == 0)
var_pos <-(var_num > 0)
print(var_num)
print(var_even)
print(var_pos)
print(var_num)
print(var_even)
print(var_pos)
var_num<-as.numeric(var_string)
var_even<-(var_num %% 2 == 0)
var_pos <-(var_num > 0)
print(var_num)
print(var_even)
print(var_pos)
var_seconds<-1238
num_min<-var_seconds%/%60
num_sec<-var_seconds%%60
if (var_seconds==1){
cat(var_seconds, "second is", num_min, "minutes and",num_sec, "second.")
}else{
if (num_min==1){
if (num_sec==1){
cat(var_seconds, "seconds is", num_min, "minute and",num_sec, "second.")
}else{
cat(var_seconds, "seconds is", num_min, "minute and",num_sec, "seconds.")
}
}else{
if (num_sec==1){
cat(var_seconds, "seconds is", num_min, "minutes and",num_sec, "second.")
}else{
cat(var_seconds, "seconds is", num_min, "minutes and",num_sec, "seconds.")
}
}}
var_seconds<-1238
num_min<-var_seconds%/%60
num_sec<-var_seconds%%60
if (var_seconds==1){
cat(var_seconds, "second is", num_min, "minutes and",num_sec, "second.")
}else{
if (num_min==1){
if (num_sec==1){
cat(var_seconds, "seconds is", num_min, "minute and",num_sec, "second.")
}else{
cat(var_seconds, "seconds is", num_min, "minute and",num_sec, "seconds.")
}
}else{
if (num_sec==1){
cat(var_seconds, "seconds is", num_min, "minutes and",num_sec, "second.")
}else{
cat(var_seconds, "seconds is", num_min, "minutes and",num_sec, "seconds.")
}
}
var_seconds<-1238
num_min<-var_seconds%/%60
num_sec<-var_seconds%%60
if (var_seconds==1){
cat(var_seconds, "second is", num_min, "minutes and",num_sec, "second.")
}else{
if (num_min==1){
if (num_sec==1){
cat(var_seconds, "seconds is", num_min, "minute and",num_sec, "second.")
}else{
cat(var_seconds, "seconds is", num_min, "minute and",num_sec, "seconds.")
}
}else{
if (num_sec==1){
cat(var_seconds, "seconds is", num_min, "minutes and",num_sec, "second.")
}else{
cat(var_seconds, "seconds is", num_min, "minutes and",num_sec, "seconds.")
}
}
}
num_big<-4000
small_int<-1
while(TRUE){
if(small_int^2>num_big){
break
}
small_int<-small_int+1
}
cat(small_int,"squared is", small_int^2,"and is the first number whose square exceeds", num_big)
